/**
 * 题目：553. 最优除法
 * 给定一组正整数，相邻的整数之间将会进行浮点除法操作。例如，[2,3,4] -> 2 / 3 / 4 。
 * 但是，你可以在任意位置添加任意数目的括号，来改变算数的优先级。
 * 你需要找出怎么添加括号，才能得到最大的结果，并且返回相应的字符串格式的表达式。
 * 你的表达式不应该含有冗余的括号。
 *
 * 示例：输入: [1000,100,10,2]
 * 输出: "1000/(100/10/2)"
 * 解释:
 * 1000/(100/10/2) = 1000/((100/10)/2) = 200
 * 但是，以下加粗的括号 "1000/((100/10)/2)" 是冗余的，
 * 因为他们并不影响操作的优先级，所以你需要返回 "1000/(100/10/2)"。
 * 时间：2022-2-27
 * 算法：因为他要得到最大的结果所以仅要求把除数尽量小，被除数尽量大即可！
 * 而除数尽量小，仅需将后面的数逐个除，就能得到最小的除数。
 */




class OptimalDivision_553 {
    public String optimalDivision(int[] nums) {
        int n = nums.length;
        StringBuilder sb = new StringBuilder();
        for (int i=0;i<n;i++){
            sb.append(nums[i]);
            if (i+1<n)
                sb.append('/');
        }
        if (n>2){
            sb.insert(sb.indexOf("/")+1,'(');
            sb.append(')');
        }
        return sb.toString();
    }
}
